package dc.human.kimbanbagi.tableJava.servlet;

import java.io.IOException;

import dc.human.kimbanbagi.tableJava.dao.WaitDAO;
import dc.human.kimbanbagi.tableJava.dto.WaitDTO;

import java.util.*;
import java.text.SimpleDateFormat;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

/*

PROJECT        : tablejava
PROGRAM ID    : WaitServlet.java
PROGRAM NAME    : 웨이팅
DESCRIPTION    : 웨이팅 관련 servlet
AUTHOR        : 반재홍
CREATED DATE    : 2024.06.05.
HISTORY
======================================================
DATE     NAME           DESCRIPTION
2024.06.05   반재홍        init

*/

@WebServlet("/wait")
public class WaitServlet extends HttpServlet {

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		
		String action = request.getParameter("action");
		
		String userId = request.getParameter("userId");
		String restaurantId = request.getParameter("restaurantId");
		
		WaitDAO dao = new WaitDAO();
		
		// 앞에 대기 팀이 몇 번 있는지 알려주는 메소드
		if(action.equals("waitBtn")) {
			String waitingNumber = dao.getNextWaitingNumber(restaurantId);
			
			request.setAttribute("waitNumber", waitingNumber);
			request.setAttribute("restaurantId", restaurantId);
			request.setAttribute("userId", userId);
			request.getRequestDispatcher("wait.jsp").forward(request, response);;
		}
		
		
		
		String phoneNumber = request.getParameter("phoneNumber");
		String restaurantName = request.getParameter("restaurantName");
		String headCount = request.getParameter("headCount");
		
		WaitDTO wait = new WaitDTO();
		
		wait.setUserId(userId);
		wait.setRestaurantId(restaurantId);
		wait.setPhoneNumber(phoneNumber);
		wait.setRestaurantName(restaurantName);
		wait.setHeadCount(headCount);
		
		// 웨이팅 상태 > "0" 웨이팅 중 / "1" 고객 호출 / "2" (사용자) 웨이팅 취소 / "3" (사장님) 웨이팅 취소 / "4" 착석 완료
        wait.setWaitingStatus("0");
        
        WaitDAO dao = new WaitDAO();
        
        // 웨이팅 신청 성공 시 성공 화면으로 이동
        if(dao.addWaiting(wait)!=0) {
        	// *alert 형식으로 변경 후 바로 userWaitList로 이동하는 방법 고려
             request.getRequestDispatcher("/waitSuccess.jsp").forward(request, response);
        } else {
        	// sql문 오류 시 처리 코드 작성
        }
        

       
	}

}
