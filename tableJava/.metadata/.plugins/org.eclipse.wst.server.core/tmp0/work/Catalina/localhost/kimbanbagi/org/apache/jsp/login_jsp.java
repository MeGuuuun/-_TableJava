/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-06-17 03:24:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>로그인 페이지</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/login.css\">\r\n");
      out.write("<script>\r\n");
      out.write("var msg = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("if(msg != null && msg != \"\"){\r\n");
      out.write("	alert(msg);\r\n");
      out.write("	request.removeAttribute(\"msg\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("	function login(id, pwd) {\r\n");
      out.write("		var userId = id;\r\n");
      out.write("		var userPwd = pwd;\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url : \"login\",\r\n");
      out.write("			data : {\r\n");
      out.write("				action : \"login\",\r\n");
      out.write("				userId : userId,\r\n");
      out.write("				userPwd : userPwd\r\n");
      out.write("			},\r\n");
      out.write("			success : function(response) {\r\n");
      out.write("			},\r\n");
      out.write("			error : function() {\r\n");
      out.write("				alert(\"일치하는 정보가 없습니다.\");\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form action=\"login\" method=\"post\">\r\n");
      out.write("			<img src=\"image/logo.png\">\r\n");
      out.write("			<div class=\"input-group\">\r\n");
      out.write("				<label for=\"user_id\">아이디</label> <input type=\"text\" name=\"user_id\"\r\n");
      out.write("					required>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"input-group\">\r\n");
      out.write("				<label for=\"user_pwd\">비밀번호</label> <input type=\"password\"\r\n");
      out.write("					name=\"user_pwd\" required>\r\n");
      out.write("			</div>\r\n");
      out.write("			<button type=\"submit\" value=\"로그인\" class=\"login-btn\">\r\n");
      out.write("				로그인<br>\r\n");
      out.write("			</button>\r\n");
      out.write("		</form>\r\n");
      out.write("		<div class=\"links\">\r\n");
      out.write("			<button id=\"joinBtn\" class=\"link-btn\">회원가입</button>\r\n");
      out.write("			<button id=\"findIDBtn\" class=\"link-btn\">아이디 찾기</button>\r\n");
      out.write("			<button id=\"findPWBtn\" class=\"link-btn\">비밀번호 찾기</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		var findIdBtn = document.getElementById('findIDBtn');\r\n");
      out.write("		var findPwBtn = document.getElementById('findPWBtn');\r\n");
      out.write("		var joinBtn = document.getElementById('joinBtn');\r\n");
      out.write("\r\n");
      out.write("		findIdBtn.addEventListener('click', function(event) {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			window.location.href = \"findID.jsp\";\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		findPwBtn.addEventListener('click', function(event) {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			window.location.href = \"findPW.jsp\";\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		joinBtn.addEventListener('click', function(event) {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			window.location.href = \"join.jsp\";\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
